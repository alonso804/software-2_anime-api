version: "3.8"

services:
  app1:
    build:
      context: ./anime-api-1
      dockerfile: Dockerfile
    ports:
      - "4001:3000"
    networks:
      - software
    environment:
      PORT: "3000"
      MONGO_URI: "mongodb://mongo:27017/anime-api"
      REDIS_HOST: "redis"
  app2:
    build:
      context: ./anime-api-1
      dockerfile: Dockerfile
    ports:
      - "4002:3000"
    networks:
      - software
    environment:
      PORT: "3000"
      MONGO_URI: "mongodb://mongo:27017/anime-api"
      REDIS_HOST: "redis"
  app3:
    build:
      context: ./anime-api-1
      dockerfile: Dockerfile
    ports:
      - "4003:3000"
    networks:
      - software
    environment:
      PORT: "3000"
      MONGO_URI: "mongodb://mongo:27017/anime-api"
      REDIS_HOST: "redis"
  app4:
    build:
      context: ./anime-api-1
      dockerfile: Dockerfile
    ports:
      - "4004:3000"
    networks:
      - software
    environment:
      PORT: "3000"
      MONGO_URI: "mongodb://mongo:27017/anime-api"
      REDIS_HOST: "redis"
  mongo:
    image: mongo
    ports:
      - 27017:27017
    networks:
      - software
    volumes:
      - $PWD/mongo-data:/data/db'
  redis:
    image: "redis:alpine"
    command: redis-server
    networks:
      - software
    ports:
      - 6379:6379
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
  nginx:
    image: nginx:1.13
    ports:
        - "8080:80"
    volumes:
        - './nginx/nginx.conf:/etc/nginx/nginx.conf'
    networks:
        - "software"
    depends_on:
      - app1
      - app2
      - app3
      - app4

networks:
  software:
    driver: bridge
